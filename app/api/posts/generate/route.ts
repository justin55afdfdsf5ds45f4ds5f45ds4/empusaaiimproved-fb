import { NextResponse } from "next/server"
import { getServerSession } from "next-auth/next"
import { authOptions } from "../../auth/[...nextauth]/route"
import { extractContentFromUrl } from "@/lib/url-extractor"

export async function POST(req: Request) {
  try {
    // For development, allow without authentication in development mode
    const session = await getServerSession(authOptions)
    if (!session && process.env.NODE_ENV !== "development") {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 })
    }

    const { url, topic, tone, count = 10 } = await req.json()

    if (!url && !topic) {
      return NextResponse.json({ error: "URL or topic is required" }, { status: 400 })
    }

    console.log(`Generating posts with: ${url ? "URL: " + url : "Topic: " + topic}`)
    console.log(`Count: ${count}, Tone: ${tone || "default"}`)

    // Extract content from the URL if provided
    let content = ""
    if (url) {
      try {
        content = await extractContentFromUrl(url)
        console.log(`Content extracted successfully (${content.length} chars)`)
      } catch (error) {
        console.error("Error extracting content from URL:", error)
        return NextResponse.json(
          {
            error: `Failed to extract content from URL: ${error instanceof Error ? error.message : String(error)}`,
          },
          { status: 500 },
        )
      }
    }

    // Check for OpenAI API key
    if (!process.env.OPENAI_API_KEY) {
      console.error("OpenAI API key is missing")
      return NextResponse.json({ error: "Server configuration error: OpenAI API key is missing" }, { status: 500 })
    }

    // Generate mock posts for testing
    // This will help us determine if the issue is with OpenAI or something else
    const mockPosts = Array.from({ length: Number(count) }).map((_, index) => ({
      id: `post-${Date.now()}-${index}`,
      title: url
        ? `Pinterest post about ${url.split("/").pop() || "website"} #${index + 1}`
        : `Pinterest post about ${topic} #${index + 1}`,
      description: `This is a sample Pinterest post description that would normally be generated by AI. It's designed to be engaging and SEO-friendly.`,
      imagePrompt: `A beautiful image related to ${url ? "the website content" : topic}`,
      imageUrl: null,
    }))

    console.log(`Generated ${mockPosts.length} mock posts for testing`)
    return NextResponse.json({ posts: mockPosts })
  } catch (error) {
    console.error("Error in post generation route:", error)
    return NextResponse.json(
      {
        error: `Failed to generate posts: There is a problem with the server configuration. Check the server logs for more information.`,
      },
      { status: 500 },
    )
  }
}
